/**
 https://leetcode.com/problems/maximum-product-subarray/submissions/
 
 1. 처음에는 덧셈 문제(#53)랑 똑같다고 생각했다가 곱셈인 경우에는 음수 케이스를 생각해야한다는 것을 깨달았다
 2. 입력이 [-3, 2, -5, -1] 인 경우 최대 덧셈 로직대로라면 2가 출력되겠지만 실제 최대 곱은 15다
 3. 따라서 음수인 경우 때문에 곱셈의 경우 최댓값과 최솟값을 모두 기록해야 한다는 생각이 들었다
 4. min, max 각각 때리느니 정렬해서 써야지 하고 아래처럼 짰다가 통과는 했는데 너무 느리길래 호옥시나 min, max 각각 하면 좀 더 빠른가 싶어서 리팩토링했는데 오히려 틀려버리고 마는데...
 5. 이유는 min/max 중에 하나를 먼저 하게 되니까 나중에 계산하는 녀석의 경우 비교에 쓰는 값이 업데이트 되어 버려서 결과가 이상하게 나왔던 것...temp 를 써서 먼저 계산하는 녀석의 과거 결과를 기록해줘야 한다... 
**/

class Solution {
    func maxProduct(_ nums: [Int]) -> Int {
        var currentProduct = (max: 1, min: 1)
        var maxProduct = nums.first!
        
        for number in nums {
            let products = [number, currentProduct.max * number, currentProduct.min * number].sorted()
            currentProduct.max = products.last!
            currentProduct.min = products.first!
            maxProduct = max(maxProduct, currentProduct.max)
        }
        
        return maxProduct
    }
}
